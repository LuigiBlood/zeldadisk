//Zelda Expansion Disk
//By LuigiBlood

//Uses ARM9 bass

//System Area

print "- Fill Disk Data...\n"

seek(0x0)
fill 0x3DEC800

print "- Fill System Area...\n  - System Data\n"

//System Area
seek(0x0)
//System Data
define x(0)
while {x} < 14 {
  define y(0)
  while {y} < 86 { //232 * 85
    //Disk Region
    if {defined DEV} {
      dw 0x00000000	//DEV
    } else if {defined USA} {
      dw 0x2263EE56	//USA
    } else {
      dw 0xE848D316	//JPN
    }    
    db 0x10
    db 0x16		//Disk Type 6 (ROM only no saving)
    dh 0x0001		//Boot Blocks Load
    db 0x0C, 0x18, 0x24, 0x30, 0x3C, 0x48, 0x54, 0x60, 0x6C, 0x78, 0x84, 0x90, 0x9C, 0xA8, 0xB4, 0xC0
    dw 0xFFFFFFFF
    dw 0x80000400
    db 0x10, 0x16, 0x1C, 0x22, 0x28, 0x2E, 0x34, 0x36, 0x37, 0x40, 0x46, 0x4C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x73
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x92
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x6F
    db 0x56, 0x5C, 0x62, 0x68, 0x6E, 0x74, 0x7A, 0x7F, 0x86, 0x8C, 0x92, 0x98
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x88
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x69
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x93
    db 0x04, 0x0C, 0x14, 0x1C, 0x24, 0x2C, 0x34, 0x3C, 0x44, 0x4C, 0x54, 0x5C
    dh 0x061E, 0x07AE, 0x10C3, 0xFFFF
    
    evaluate y({y} + 1)
  }
  evaluate x({x} + 1)
}

//Disk ID
print "  - Disk ID\n"

define x(14)
while {x} < 24 {
  define y(0)
  while {y} < 86 { //232 * 85
    //Game ID Code
    if {defined USA} {
      db "EZLE"	//USA
    } else {
      db "EZLJ"	//JPN
    }
    db 0	//Version 0
    db 0	//Disk Number 0
    db 0	//Does not use MFS
    db 0	//Disk Use
    db "URAZELDA"
    db "ITISREAL"
    db "01"
    db "WOAHHH"
    
    fill 200
    
    evaluate y({y} + 1)
  }
  evaluate x({x} + 1)
}